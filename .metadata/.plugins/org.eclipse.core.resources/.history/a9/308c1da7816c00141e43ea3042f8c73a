package Interfaz;

import java.io.FileOutputStream;
import java.util.Calendar;
import java.util.GregorianCalendar;

import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

public class Reportes {
	String fecha, hora;
	Document doc = new Document();
	
	public void estadoDeCuenta(Cliente cliente){
		try {
			PdfWriter.getInstance(doc, new FileOutputStream("estadoDeCuenta.pdf"));
			doc.open();
			Paragraph encabezado = new Paragraph();
			encabezado.add("Estado de Cuenta de " + cliente.nombre+"\r\n");
			
			Paragraph contenido = new Paragraph();
			contenido.add("\tTiene un saldo de: \t" + cliente.saldo+"\r\t"+
					"\tHa gastado la cantidad de: \t"+ cliente.moneda +". "+ cliente.ingresos);
			
			Paragraph gracias = new Paragraph();
			gracias.add("\r\n Gracias por preferirnos!\r\nreporte generado el"+
					fecha + " a las " + hora);
			doc.add(encabezado);
			doc.add(contenido);
			doc.add(gracias);
			doc.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void serviciosXHabitacion(Habitacion h){
		try {
			PdfWriter.getInstance(doc, new FileOutputStream("ServiciosxHabitacion.pdf"));
			doc.open();
			Paragraph encabezado = new Paragraph();
			encabezado.add("Servicios para la habitacion " + h.numero +"\r\n");
			doc.add(encabezado);
			
			Paragraph contenido = new Paragraph();
			while(h.servicios != null){
				contenido.add("\t"+servicios.tipo +" "+servicios.nombre+"\t utilizado " 
						+ servicios.nclientes+"\r\n");
				doc.add(contenido);
				h.servicios = servicios.siguiente;
			}
			
			Paragraph gracias = new Paragraph();
			gracias.add("\r\n Gracias por preferirnos!\r\nreporte generado el"+
					fecha + " a las " + hora);
			doc.add(gracias);
			doc.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	
	public void promosPaquetes(Promociones p){
		try {
			PdfWriter.getInstance(doc, new FileOutputStream("PromosyPaquetes.pdf"));
			doc.open();
			Paragraph encabezado = new Paragraph();
			encabezado.add("Promociones y Paquetes " + p.applyTo +"\r\n");
			doc.add(encabezado);
			
			Paragraph contenido = new Paragraph();
			while(p != null){
				contenido.add("\t Promocion: "+p.nombre+"\t Precio: "+p.precio+"\t creado el "+p.fecha);
				doc.add(contenido);
				p = p.siguiente;
			}
			
			Paragraph gracias = new Paragraph();
			gracias.add("\r\n Gracias por preferirnos!\r\nreporte generado el"+
					fecha + " a las " + hora);
			doc.add(gracias);
			doc.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void ingresosxServicio(Servicios s){
		try {
			PdfWriter.getInstance(doc, new FileOutputStream("ingresos_servicio.pdf"));
			doc.open();
			Paragraph encabezado = new Paragraph();
			encabezado.add("Ingresos por servicio para el hotel de " + s.ubicacion +"\r\n");
			doc.add(encabezado);
			
			Paragraph contenido = new Paragraph();
			while(s != null){
				contenido.add("\t Servicio: "+s.nombre+"\t Ingresos: "+s.ingresos);
				doc.add(contenido);
				s = s.siguiente;
			}
			
			Paragraph gracias = new Paragraph();
			gracias.add("\r\n Gracias por preferirnos!\r\nreporte generado el"+
					fecha + " a las " + hora);
			doc.add(gracias);
			doc.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public Reportes(){
		Calendar calendario = new GregorianCalendar();
		fecha = calendario.get(Calendar.DAY_OF_MONTH)+"/"+calendario.get(Calendar.MONTH)+"/"+calendario.get(Calendar.YEAR);
		hora = calendario.get(Calendar.HOUR)+":"+calendario.get(Calendar.MINUTE)+" "+calendario.get(Calendar.AM_PM);
	}
}
